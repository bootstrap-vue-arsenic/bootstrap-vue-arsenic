{"version":3,"sources":["webpack:///./docs/components/main.js","webpack:///./docs/components/section.js","webpack:///./docs/plugins/docs-mixin.js","webpack:///./docs/markdown/intro/README.md","webpack:///./docs/pages/docs/index.js"],"names":["vue_functional_data_merge__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","name","functional","props","tag","type","String","default","render","h","_ref","data","children","mergeData","staticClass","play","Boolean","directives","push","class","scrollTimeout","computed","content","this","$route","params","slug","_content","headTitle","routeName","title","section","meta","filter","join","headMeta","hid","property","description","desc","bvDescription","head","mounted","clearTimeout","focusScroll","$nextTick","$root","$emit","readme","updated","beforeDestroy","methods","hash","el","$el","querySelector","concat","replace","scrollIntoView","tabIndex","focus","scroller","document","scrollingElement","documentElement","body","setTimeout","scrollTo","offsetTop","module","exports","r","_components_main__WEBPACK_IMPORTED_MODULE_0__","_components_section__WEBPACK_IMPORTED_MODULE_1__","_plugins_docs_mixin__WEBPACK_IMPORTED_MODULE_2__","_content__WEBPACK_IMPORTED_MODULE_3__","_markdown_intro_README_md__WEBPACK_IMPORTED_MODULE_4__","_markdown_intro_README_md__WEBPACK_IMPORTED_MODULE_4___default","n","layout","template","components","Main","Section","mixins","docsMixin","bootstrapVersion","bootstrapVueVersion","vueVersion","nuxtVersion","defaultConfig"],"mappings":"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","file":"d511bf296e33e31307a7.js","sourcesContent":["import { mergeData } from 'vue-functional-data-merge'\r\n\r\nexport default {\r\n  name: 'BDMain',\r\n  functional: true,\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'main'\r\n    }\r\n  },\r\n  render(h, { props, data, children }) {\r\n    return h(props.tag, mergeData(data, { staticClass: 'bd-main' }), [children])\r\n  }\r\n}\r\n","import { mergeData } from 'vue-functional-data-merge'\r\n\r\nexport default {\r\n  name: 'BDSection',\r\n  functional: true,\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: 'section'\r\n    },\r\n    play: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  render(h, { props, data, children }) {\r\n    let directives = []\r\n    if (props.play) {\r\n      directives.push({ name: 'play' })\r\n    }\r\n    return h(\r\n      props.tag,\r\n      mergeData(data, {\r\n        class: ['bd-content'],\r\n        directives\r\n      }),\r\n      [children]\r\n    )\r\n  }\r\n}\r\n","/*\r\n * docs-mixin: used by any page under /docs path\r\n */\r\nimport { scrollTo, offsetTop } from '~/utils'\r\nimport { bvDescription } from '~/content'\r\n\r\n// @vue/component\r\nexport default {\r\n  data() {\r\n    return {\r\n      scrollTimeout: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    content() {\r\n      // NOTE: is this computed prop used anymore?\r\n      return (this.$route.params.slug && this._content[this.$route.params.slug]) || {}\r\n    },\r\n    headTitle() {\r\n      const routeName = this.$route.name\r\n      let title = ''\r\n      let section = ''\r\n      if (this.meta && this.meta.title) {\r\n        title = this.meta.title\r\n      }\r\n      if (routeName === 'docs-components-slug') {\r\n        section = 'Components'\r\n      } else if (routeName === 'docs-directives-slug') {\r\n        section = 'Directives'\r\n      } else if (routeName === 'docs-reference-slug') {\r\n        section = 'Reference'\r\n      } else if (routeName === 'docs-misc-slug') {\r\n        section = 'Misc'\r\n      }\r\n      return [title, section, 'BootstrapVueArsenic'].filter(Boolean).join(' | ')\r\n    },\r\n    headMeta() {\r\n      const meta = [\r\n        {\r\n          hid: 'og:title',\r\n          name: 'og:title',\r\n          property: 'og:title',\r\n          content: this.headTitle\r\n        }\r\n      ]\r\n      if (this.meta && this.meta.description) {\r\n        const desc = this.meta.description\r\n        meta.push({\r\n          hid: 'description',\r\n          name: 'description',\r\n          content: desc\r\n        })\r\n        meta.push({\r\n          hid: 'og:description',\r\n          name: 'og:description',\r\n          property: 'og:description',\r\n          content: desc\r\n        })\r\n      } else if (bvDescription) {\r\n        meta.push({\r\n          hid: 'description',\r\n          name: 'description',\r\n          content: bvDescription\r\n        })\r\n      }\r\n      return meta\r\n    }\r\n  },\r\n\r\n  head() {\r\n    return {\r\n      title: this.headTitle,\r\n      meta: this.headMeta\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    clearTimeout(this.scrollTimeout)\r\n    this.scrollTimeout = null\r\n    this.focusScroll()\r\n    this.$nextTick(() => {\r\n      this.$root.$emit('setTOC', this.readme || '', this.meta || null)\r\n    })\r\n  },\r\n\r\n  updated() {\r\n    clearTimeout(this.scrollTimeout)\r\n    this.scrollTimeout = null\r\n    this.focusScroll()\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.$root.$emit('setTOC', '')\r\n  },\r\n\r\n  methods: {\r\n    focusScroll() {\r\n      let hash = this.$route.hash\r\n      this.$nextTick(() => {\r\n        let el\r\n        if (hash) {\r\n          // We use an attribute querySelector rather than getElementByID, as some auto\r\n          // generated ID's are invalid, and some may appear more than once\r\n          el = this.$el.querySelector(`[id=\"${hash.replace('#', '')}\"]`)\r\n          this.scrollIntoView(el)\r\n        }\r\n        if (!el) {\r\n          el = this.$el.querySelector('h1')\r\n        }\r\n        if (el) {\r\n          el.tabIndex = -1\r\n          el.focus()\r\n        }\r\n      })\r\n    },\r\n    scrollIntoView(el) {\r\n      if (el) {\r\n        // Get the document scrolling element\r\n        const scroller = document.scrollingElement || document.documentElement || document.body\r\n        // Allow time for v-play to finish rendering\r\n        this.scrollTimeout = setTimeout(() => {\r\n          // scroll heading into view (minus offset to account for nav top height\r\n          scrollTo(scroller, offsetTop(el) - 70, 100)\r\n          this.scrollTimeout = null\r\n        }, 100)\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h1 id=\\\"getting-started\\\"><span class=\\\"bd-content-title\\\">Getting Started</span></h1>\\n<p class=\\\"bd-lead\\\">Get started with BootstrapVue, based on the worldâ€™s most popular framework - Bootstrap V4, for\\nbuilding responsive, mobile-first sites using Vue.js.</p>\\n<ul>\\n<li><a href=\\\"https://vuejs.org\\\">Vue.js</a> version <code>{{ vueVersion }}</code> (or greater) is recommended</li>\\n<li>BootstrapVueArsenic requires <a href=\\\"https://getbootstrap.com\\\">Bootstrap</a> version\\n<code>{{ bootstrapVersion }}</code> SCSS/CSS</li>\\n<li>BootstrapVueArsenic requires <a href=\\\"https://bootstrap-vue.js.org\\\">BootstrapVue</a> version\\n<code>{{ bootstrapVueVersion }}</code> vue components</li>\\n<li>jQuery is <strong>not</strong> required</li>\\n</ul>\\n<h2 id=\\\"general\\\"><span class=\\\"bd-content-title\\\">General<a class=\\\"anchorjs-link\\\" href=\\\"#general\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you are using module bundlers like <a href=\\\"https://webpack.js.org/\\\">webpack</a>,\\n<a href=\\\"https://rollupjs.org\\\">rollup.js</a>, etc you may prefer to directly include the package into your\\nproject. To get started, use <code>yarn</code> or <code>npm</code> to get the latest version of Bootstrap 4, Vue.js,\\nBootstrapVue and BootstrapVueArsenic:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i bootstrap vue bootstrap-vue bootstrap-vue-arsenic\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add bootstrap vue bootstrap-vue bootstrap-vue-arsenic</pre><p>Then, register BootstrapVueArsenic plugin in your app entry point:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVueArsenic <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic'</span>\\n\\nVue.use(BootstrapVue)\\nVue.use(BootstrapVueArsenic)</pre><p>And import Bootstrap and BootstrapVueArsenic <code>css</code> files:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/dist/bootstrap-vue-arsenic.css'</span></pre><p>Or import Bootstrap and BootstrapVueArsenic <code>scss</code> files via a single custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap/scss/bootstrap'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue/src/index.scss'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue-arsenic/src/index.scss'</span>;</pre><pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><p>Be sure to <code>@import</code> or define your custom variable values <em>before</em> including Bootstrap SCSS\\n(<code>bootstrap.scss</code>), BootstrapVue SCSS (<code>bootstrap-vue.scss</code>), and include BootstrapVueArsenic SCSS\\n(<code>bootstrap-vue-arsenic.scss</code>) <em>after that</em> to ensure variables are set up correctly.</p>\\n<p>Make sure you place all the SCSS <code>@import</code>s into a single SCSS file, and import that single file\\ninto your project. Importing individual SCSS files into your project will <strong>not</strong> share variable\\nvalues and functions between files by default.</p>\\n<p><strong>Note</strong>: <em>Requires webpack configuration to load CSS/SCSS files\\n(<a href=\\\"https://webpack.js.org/guides/asset-management/#loading-css\\\">official guide</a>)</em>.</p>\\n<p>For information on theming Bootstrap, check out the\\n<a href=\\\"%5B/docs/reference/theming%5D(https://bootstrap-vue.js.org/docs/reference/theming)\\\">BootstrapVue Theming</a>\\nreference section.</p>\\n<h2 id=\\\"nuxtjs-module\\\"><span class=\\\"bd-content-title\\\">Nuxt.js Module<a class=\\\"anchorjs-link\\\" href=\\\"#nuxtjs-module\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><a href=\\\"https://nuxtjs.org\\\">Nuxt.js</a> version <code>{{ nuxtVersion }}</code> (or greater) is recommended.</p>\\n<p>Install dependencies:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i bootstrap-vue-arsenic\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add bootstrap-vue-arsenic</pre><p>Add <code>bootstrap-vue/nuxt</code> and <code>bootstrap-vue-arsenic/nuxt</code> to modules section of <strong>nuxt.config.js</strong>.</p>\\n<p>This will include both <code>boostrap.css</code>, <code>bootstrap-vue.css</code> and <code>bootstrap-vue-arsenic.css</code> default\\nCSS.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>, <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/nuxt'</span>]\\n}</pre><p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap,\\nBootstrapVue and BootstrapVueArsenic pre-compiled CSS files by setting the following option(s) to\\n<code>false</code>:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>, <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">BootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">bootstrapCSS</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-comment\\\">// Or css: false,</span>\\n    bootstrapVueCSS: <span class=\\\"hljs-literal\\\">false</span> <span class=\\\"hljs-comment\\\">// Or bvCSS: false</span>\\n  },\\n  <span class=\\\"hljs-attr\\\">BootstrapVueArsenic</span>: {\\n    <span class=\\\"hljs-attr\\\">css</span>: <span class=\\\"hljs-literal\\\">false</span>\\n  }\\n}</pre><p>BootstrapVue and BootstrapVueArsenic&#39;s custom SCSS relies on some Bootstrap SCSS variables. You can\\ninclude Bootstrap, BootstrapVue and BootstrapVueArsenic SCSS in your project&#39;s custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n\\n<span class=\\\"hljs-comment\\\">// Custom overrides go first</span>\\n<span class=\\\"hljs-variable\\\">$grid-breakpoints</span>: (\\n  xs: <span class=\\\"hljs-number\\\">0</span>,\\n  sm: <span class=\\\"hljs-number\\\">480px</span>,\\n  md: <span class=\\\"hljs-number\\\">640px</span>,\\n  lg: <span class=\\\"hljs-number\\\">992px</span>,\\n  xl: <span class=\\\"hljs-number\\\">1300px</span>\\n);\\n\\n<span class=\\\"hljs-comment\\\">// Then include the following</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/scss/bootstrap.scss'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/src/index.scss'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/src/index.scss'</span>;</pre><p>In your app main entry point include the single custom SCSS file (when using <code>sass-loader</code>):</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><h3 id=\\\"tree-shaking-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Tree shaking with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#tree-shaking-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you wish to reduce your bundle size because you only use a subset of the available\\nBootstrapVueArsenic plugins, you can configure the list of BootstrapVueArsenic <code>componentPlugins</code>\\nyou want to globally install in your Nuxt.js project.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>, <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">BootstrapVueArsenic</span>: {\\n    <span class=\\\"hljs-attr\\\">componentPlugins</span>: [<span class=\\\"hljs-string\\\">'Avatar'</span>, <span class=\\\"hljs-string\\\">'Loading'</span>]\\n  }\\n}</pre><h3 id=\\\"passing-custom-bootstrapvuearsenic-config-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Passing custom BootstrapVueArsenic config with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#passing-custom-bootstrapvuearsenic-config-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you need to pass a custom\\n<a href=\\\"/docs/misc/settings#default-bootstrapvuearsenic-configuration\\\">BootstrapVueArsenic configuration</a>,\\nyou may do so by setting the <code>config</code> property in your <code>nuxt.config.js</code>:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>, <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">BootstrapVueArsenic</span>: {\\n    <span class=\\\"hljs-attr\\\">config</span>: {\\n      <span class=\\\"hljs-comment\\\">// Custom config options here</span>\\n    }\\n  }\\n}</pre><h3 id=\\\"using-pretranspiled-version-of-bootstrapvuearsenic-for-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Using pretranspiled version of BootstrapVueArsenic for Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#using-pretranspiled-version-of-bootstrapvuearsenic-for-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>Nuxt module uses precompiled version of BootstrapVueArsenic for faster development builds and the\\nsource of BootstrapVueArsenic for higher quality production builds.</p>\\n<p>You can override this option using <code>usePretranspiled</code> option. Setting to <code>true</code> uses <code>es/</code> instead\\nof <code>src/</code>. By default <code>usePretranspiled</code> is enabled in development mode only.</p>\\n<h2 id=\\\"vue-cli-3\\\"><span class=\\\"bd-content-title\\\">Vue CLI 3<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-3\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Create a new project in the directory <code>my-project</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npx @vue/cli create my-project</pre><p>Enter the <code>my-project</code> directory and install <code>bootstrap-vue</code> and <code>bootstrap-vue-arsenic</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npm i bootstrap-vue bootstrap-vue-arsenic</pre><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue and BootstrapVueArsenic\\nplugin as with the webpack instructions.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVueArsenic <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic'</span>\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/dist/bootstrap-vue-arsenic.css'</span>\\n\\nVue.use(BootstrapVue)\\nVue.use(BootstrapVueArsenic)</pre><p>Optionally, you can import components individually, as <a href=\\\"#individual-components\\\">below</a>. To shorten\\nimport paths, we can add a webpack alias via <code>vue.config.js</code>.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> path = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">'path'</span>)\\n\\n<span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">configureWebpack</span>: {\\n    <span class=\\\"hljs-attr\\\">resolve</span>: {\\n      <span class=\\\"hljs-attr\\\">alias</span>: {\\n        <span class=\\\"hljs-string\\\">'bootstrap-components'</span>: path.resolve(__dirname, <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue/es/components'</span>),\\n        <span class=\\\"hljs-string\\\">'bootstrap-a-components'</span>: path.resolve(\\n          __dirname,\\n          <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue-arsenic/es/components'</span>\\n        )\\n      }\\n    }\\n  }\\n}</pre><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on\\nvarious BootstrapVue and BootstrapVueArsenic components, refer to the Vue CLI 3 section of the\\n<a href=\\\"/docs/reference/images#vue-cli-3-support\\\">Image Src Resolving</a> reference page.</p>\\n<h2 id=\\\"selective-component-and-directive-inclusion-in-module-bundlers\\\"><span class=\\\"bd-content-title\\\">Selective component and directive inclusion in module bundlers<a class=\\\"anchorjs-link\\\" href=\\\"#selective-component-and-directive-inclusion-in-module-bundlers\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>When using a module bundler you can optionally import only specific components groups, components\\nand/or directives.</p>\\n<h3 id=\\\"component-groups-as-vue-plugins\\\"><span class=\\\"bd-content-title\\\">Component groups as Vue plugins<a class=\\\"anchorjs-link\\\" href=\\\"#component-groups-as-vue-plugins\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>You can also import component groups as Vue plugins by importing the component group or directive\\ndirectory:</p>\\n<!-- eslint-disable import/first, import/no-duplicates -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// This imports &lt;b-avatar&gt; as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { Avatar } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/es/components'</span>\\nVue.use(Avatar)</pre><p>Refer to the component documentation for details.</p>\\n<h2 id=\\\"individual-components\\\"><span class=\\\"bd-content-title\\\">Individual components<a class=\\\"anchorjs-link\\\" href=\\\"#individual-components\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you would like to only pull in a specific component or set of components, you can do this by\\ndirectly importing those components.</p>\\n<p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> BAvatar <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/es/components/avatar/avatar'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BLoading <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic/es/components/loading/loading'</span></pre><p>Then add it to your component definition:</p>\\n<!-- eslint-disable no-undef -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'my-component'</span>, {\\n  <span class=\\\"hljs-attr\\\">components</span>: {\\n    <span class=\\\"hljs-string\\\">'b-avatar'</span>: BAvatar,\\n    <span class=\\\"hljs-string\\\">'b-loading'</span>: BLoading\\n  }\\n})</pre><p>Or register them globally:</p>\\n<!-- eslint-disable no-undef -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'b-avatar'</span>, BAvatar)\\nVue.component(<span class=\\\"hljs-string\\\">'b-loading'</span>, BLoading)</pre><p>Vue and ES2015 allow for various syntaxes here, so feel free to utilize kebab-casing (shown),\\ncamelCasing, PascalCasing, and/or object property shorthand.</p>\\n<h3 id=\\\"webpack--babel\\\"><span class=\\\"bd-content-title\\\">webpack + Babel<a class=\\\"anchorjs-link\\\" href=\\\"#webpack--babel\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>When importing components individually, you must configure your app to properly build the\\nBootstrapVue and BootstrapVueArsenic library source code. This commonly involves white-listing the\\nnode module for your babel loader rule in webpack.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// webpack.config.js</span>\\n<span class=\\\"hljs-keyword\\\">const</span> path = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">'path'</span>)\\n\\n<span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">entry</span>: <span class=\\\"hljs-string\\\">'./app.js'</span>,\\n  <span class=\\\"hljs-attr\\\">output</span>: {\\n    <span class=\\\"hljs-attr\\\">filename</span>: <span class=\\\"hljs-string\\\">'bundle.js'</span>\\n  },\\n  <span class=\\\"hljs-attr\\\">module</span>: {\\n    <span class=\\\"hljs-attr\\\">rules</span>: [\\n      {\\n        <span class=\\\"hljs-attr\\\">test</span>: <span class=\\\"hljs-regexp\\\">/\\\\.js$/</span>,\\n        <span class=\\\"hljs-attr\\\">include</span>: [\\n          <span class=\\\"hljs-comment\\\">// Use `include` vs `exclude` to whitelist vs blacklist</span>\\n          path.resolve(__dirname, <span class=\\\"hljs-string\\\">'src'</span>), <span class=\\\"hljs-comment\\\">// Whitelist your app source files</span>\\n          <span class=\\\"hljs-built_in\\\">require</span>.resolve(<span class=\\\"hljs-string\\\">'bootstrap-vue'</span>), <span class=\\\"hljs-comment\\\">// Whitelist bootstrap-vue</span>\\n          <span class=\\\"hljs-built_in\\\">require</span>.resolve(<span class=\\\"hljs-string\\\">'bootstrap-vue-arsenic'</span>) <span class=\\\"hljs-comment\\\">// Whitelist bootstrap-vue-arsenic</span>\\n        ],\\n        <span class=\\\"hljs-attr\\\">loader</span>: <span class=\\\"hljs-string\\\">'babel-loader'</span>\\n      }\\n    ]\\n  }\\n}</pre><h2 id=\\\"browser\\\"><span class=\\\"bd-content-title\\\">Browser<a class=\\\"anchorjs-link\\\" href=\\\"#browser\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Add the Boostrap, BootstrapVue and BootstrapVueArsenic CSS URLs in your HTML <code>&lt;head&gt;</code> section,\\nfollowed by the required JavaScript files.</p>\\n<p>When supporting older browsers (see <a href=\\\"#browser-support\\\">Browser Support</a> below), you will need to\\ninclude a polyfill for handling modern JavaScript features before loading Vue and BoostrapVue\\nJavaScript files.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- Load required Bootstrap, BootstrapVue and BootstrapVueArsenic CSS --&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span> <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span> <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap/dist/css/bootstrap.min.css\\\"</span> /&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span>\\n  <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span>\\n  <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span>\\n  <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue/dist/bootstrap-vue.min.css\\\"</span>\\n/&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span>\\n  <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span>\\n  <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span>\\n  <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue-arsenic/dist/bootstrap-vue-arsenic.min.css\\\"</span>\\n/&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/@babel/polyfill/dist/polyfill.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/vue/dist/vue.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue/dist/bootstrap-vue.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue-arsenic/dist/bootstrap-vue-arsenic.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span></pre><h2 id=\\\"build-variants\\\"><span class=\\\"bd-content-title\\\">Build Variants<a class=\\\"anchorjs-link\\\" href=\\\"#build-variants\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Choosing the best variant for your build environment / packager helps less bundle sizes. If your\\nbundler supports es modules, it will automatically prefer it over commonjs.</p>\\n<div class=\\\"table-responsive-sm\\\"><table class=\\\"b-table table table-bordered table-striped bv-docs-table\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Variant</th>\\n<th>Environments</th>\\n<th>Package path</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><strong>ES Modules</strong></td>\\n<td>webpack 2 / rollup.js</td>\\n<td><code>es/index.js</code></td>\\n</tr>\\n<tr>\\n<td><strong>ESM Module</strong></td>\\n<td>webpack 2 / rollup.js</td>\\n<td><code>dist/bootstrap-vue-arsenic.esm.js</code> <em>or</em> <code>dist/bootstrap-vue-arsenic.esm.min.js</code></td>\\n</tr>\\n<tr>\\n<td>commonjs2</td>\\n<td>webpack 1 / ...</td>\\n<td><code>dist/bootstrap-vue-arsenic.common.js</code> <em>or</em> <code>dist/bootstrap-vue-arsenic.common.min.js</code></td>\\n</tr>\\n<tr>\\n<td>UMD</td>\\n<td>Browser</td>\\n<td><code>dist/bootstrap-vue-arsenic.js</code> <em>or</em> <code>dist/bootstrap-vue-arsenic.min.js</code></td>\\n</tr>\\n</tbody></table>\\n</div><p>BootstrapVueArsenic relies on <code>vue-functional-data-merge</code> (for functional components). This\\ndependency are included in the <code>commonjs2</code> and <code>UMD</code> bundles.</p>\\n<h2 id=\\\"browser-support\\\"><span class=\\\"bd-content-title\\\">Browser Support<a class=\\\"anchorjs-link\\\" href=\\\"#browser-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"css\\\"><span class=\\\"bd-content-title\\\">CSS<a class=\\\"anchorjs-link\\\" href=\\\"#css\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVueArsenic is to be used with Bootstrap 4.3 CSS/SCSS. Please see\\n<a href=\\\"https://getbootstrap.com/docs/4.3/getting-started/browsers-devices\\\">Browsers and devices</a> for more\\ninformation about browsers currently supported by Bootstrap 4.</p>\\n<h3 id=\\\"js\\\"><span class=\\\"bd-content-title\\\">JS<a class=\\\"anchorjs-link\\\" href=\\\"#js\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVueArsenic is written in Vue.js! So this is up to your project and bundler which browsers\\nare supported.</p>\\n<p>If you want to support older IE, Android and IOS devices, you may want to use\\n<a href=\\\"https://babeljs.io/docs/usage/polyfill\\\">Babel Polyfill</a>:</p>\\n<ul>\\n<li><code>npm install @babel/polyfill</code></li>\\n<li>Import it in your app main entry point with <code>import &#39;@babel/polyfill&#39;</code></li>\\n</ul>\\n<p>Or use <a href=\\\"https://polyfill.io/\\\">Polyfill.io</a> to dynamically serve browser specific polyfills via\\n<code>&lt;script&gt;</code> tags in the HTML <code>&lt;head&gt;</code> section.</p>\\n<h2 id=\\\"tooling-support\\\"><span class=\\\"bd-content-title\\\">Tooling Support<a class=\\\"anchorjs-link\\\" href=\\\"#tooling-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"vs-code--vetur\\\"><span class=\\\"bd-content-title\\\">VS Code + Vetur<a class=\\\"anchorjs-link\\\" href=\\\"#vs-code--vetur\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you are using <a href=\\\"https://code.visualstudio.com/\\\">VS Code</a> as your text editor, BootstrapVueArsenic\\nhas intellisense autocompletion for component attributes available when using the\\n<a href=\\\"https://marketplace.visualstudio.com/items?itemName=octref.vetur\\\">Vetur extension</a>.</p>\\n<p><a href=\\\"https://twitter.com/AlexSashaRegan/status/912769997776158723\\\">Twitter: Vetur + BootstrapVue</a></p>\\n\";","import Main from '~/components/main'\r\nimport Section from '~/components/section'\r\nimport docsMixin from '~/plugins/docs-mixin'\r\nimport {\r\n  bootstrapVersion,\r\n  bootstrapVueVersion,\r\n  vueVersion,\r\n  nuxtVersion,\r\n  defaultConfig\r\n} from '~/content'\r\nimport readme from '~/markdown/intro/README.md'\r\n\r\nexport default {\r\n  name: 'BDDocs',\r\n  layout: 'docs',\r\n  // We use a string template here so that the docs README can do interpolation\r\n  template: `<Main><Section>${readme}</Section></Main>`,\r\n  components: {\r\n    Main,\r\n    Section\r\n  },\r\n  mixins: [docsMixin],\r\n  data() {\r\n    return {\r\n      readme,\r\n      bootstrapVersion,\r\n      bootstrapVueVersion,\r\n      vueVersion,\r\n      nuxtVersion,\r\n      defaultConfig\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}